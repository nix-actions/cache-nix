name: 'Cache install Nix packages'
description: 'Use the GitHub Actions cache for Nix packages'
author: 'Rik Huijzer'
inputs:
  key:
    description: 'An explicit key for restoring and saving the cache'
    required: true
  restore-keys:
    description: 'An ordered list of keys to use for restoring the cache if no cache hit occurred for key'
    required: false
  nix_version:
    description: 'Nix version, defaults to `nixos-unstable`.'
    default: 'nixos-unstable'
  nix_file:
    description: 'Nix file, defaults to `default.nix`.'
    default: 'default.nix'
  nix_install_url:
    description: 'Install URL for the Nix package manager; obtain newest via https://nixos.org/nix/install.'
    default: 'https://releases.nixos.org/nix/nix-2.13.0/install'
outputs:
  cache-hit:
    description: 'A boolean value to indicate an exact match was found for the primary key'
    value: ${{ steps.hit.outputs.cache-hit }}
branding:
  icon: 'arrow-down'
  color: 'blue'
runs:
  using: 'composite'
  steps:
    - name: Prepare for restoring cache
      shell: bash
      run: ./src/core.sh "prepare-restore"

    - name: Pass USER to GitHub Action
      id: user
      shell: bash
      run: echo "USER=$USER" >> $GITHUB_ENV

    - name: Restore cache
      id: cache
      uses: actions/cache/restore@v3
      with:
        path: |
          /nix/store/
          /nix/var/nix/profiles/per-user/${{ env.USER }}/profile/bin/
          /nix/var/nix/profiles/default/bin/
          /nix/var/nix/profiles/per-user/root/channels/
          /home/${{ env.USER }}/.nix-profile/bin/
        key: ${{ inputs.key }}
        restore-keys: ${{ inputs.restore-keys }}

    - name: Install with cache
      if: steps.cache.outputs.cache-hit == 'true'
      shell: bash
      run: ./src/core.sh "install-from-cache"

    - name: Install without cache
      # Use `!= 'true'` because `cache-hit` is not set if no cache was restored.
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
          ./src/core.sh "install-with-nix"
          ./src/core.sh "prepare-save"
      env:
        INPUT_NIX_FILE: ${{ inputs.nix_file }}
        INPUT_NIX_VERSION: ${{ inputs.nix_version }}
        INPUT_NIX_INSTALL_URL: ${{ inputs.nix_install_url }}

    - name: Save cache
      uses: actions/cache/save@v3
      with:
        path: |
          /nix/store/
          /nix/var/nix/profiles/per-user/${{ env.USER }}/profile/bin/
          /nix/var/nix/profiles/default/bin/
          /nix/var/nix/profiles/per-user/root/channels/
          /home/${{ env.USER }}/.nix-profile/bin/
        key: ${{ inputs.key }}

    - name: Set cache-hit output
      id: hit
      shell: bash
      run: echo "cache-hit=${{ steps.cache.outputs.cache-hit }}" >> $GITHUB_OUTPUT
