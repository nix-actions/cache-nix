name: 'Cache install Nix packages'
description: 'Use the GitHub Actions cache for Nix packages'
author: 'Rik Huijzer'
inputs:
  key:
    description: 'An explicit key for restoring and saving the cache'
    required: true
  restore-keys:
    description: 'An ordered list of keys to use for restoring the cache if no cache hit occurred for key'
    required: false
  nix_version:
    description: 'Nix version, defaults to `nixos-unstable`.'
    default: 'nixos-unstable'
  nix_file:
    description: 'Nix file, defaults to `default.nix`.'
    default: 'default.nix'
outputs:
  cache-hit:
    description: 'A boolean value to indicate an exact match was found for the primary key'
branding:
  icon: 'arrow-down'
  color: 'blue'
runs:
  using: 'composite'
  steps:
    - name: Prepare for restoring cache
      shell: bash
      run: ./dist/core.sh "prepare-restore"

    - name: Restore cache
      id: cache
      uses: actions/cache/restore@v3
      with:
        path: |
          "/nix/store/"
          "/nix/var/nix/profiles/per-user/$USER/profile/bin/"
          "/nix/var/nix/profiles/default/bin/"
          "/nix/var/nix/profiles/per-user/root/channels/"
        key: ${{ inputs.key }}
        restore-keys: ${{ inputs.restore-keys }}

    - name: Set cache-hit output
      shell: bash
      run: echo "cache-hit=$CACHE_HIT" >> $GITHUB_OUTPUT
      env:
        CACHE_HIT: ${{ steps.cache.outputs.cache-hit }}

    - name: Install with cache
      if: steps.cache.outputs.cache-hit == 'true'
      shell: bash
      run: ./dist/core.sh "install-from-cache"

    - name: Install without cache
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
          ./dist/core.sh "install-with-nix"
          ./dist/core.sh "prepare-save"
      env:
        INPUT_NIX_FILE: ${{ inputs.nix_file }}
        INPUT_NIX_VERSION: ${{ inputs.nix_version }}

    - name: Save cache
      uses: actions/cache/save@v3
      with:
        path: |
          "/nix/store/"
          "/nix/var/nix/profiles/per-user/$USER/profile/bin/"
          "/nix/var/nix/profiles/default/bin/"
          "/nix/var/nix/profiles/per-user/root/channels/"
        key: ${{ inputs.key }}
